#!/usr/bin/env ruby

daemon_mode = false

if (%w( -h --help -help help ) & ARGV).length > 0
  puts "usage: djsd [-hvd]"
  puts "option(s):"
  puts "-d | daemon mode (background)"
  puts "starts dotjs server in the foreground. kill with ^C"
  exit
end

if ARGV.include?('-v')
  puts "djsd 2.0"
  exit
end

if ARGV.include?('-d')
  daemon_mode = true
end

require 'webrick'
require 'webrick/https'

dotjs = Class.new(WEBrick::HTTPServlet::AbstractServlet) do
  def do_GET(request, response)
    body = build_body(request.path)

    response.status = body.empty? ? 204 : 200
    if origin = detect_origin(request)
      response['Access-Control-Allow-Origin'] = origin
    end
    response['Content-Type'] = 'text/javascript'
    response.body = body
  end

  def build_body(path)
    files = [File.expand_path("~/.js/default.js")]
    paths = path.gsub('/','').split('.')

    until paths.empty?
      file = File.expand_path("~/.js/#{paths.join('.')}")
      files << file if File.file?(file)
      paths.shift
    end

    body = "// dotjs is working! //\n"

    files.each do |file|
      body << File.read(file) + "\n" if File.file?(file)
    end

    body
  end

  def detect_origin(req)
    path   = req.path
    origin = req.header['origin']
    search = path.gsub('/','').gsub(/\.js$/,'') + '$'

    if origin.length == 1 && path.length != 1 && origin[0].match(search)
      origin[0]
    end
  end
end

ssl_info = DATA.read
ssl_cert = ssl_info.scan(/(-----BEGIN CERTIFICATE-----.+?-----END CERTIFICATE-----)/m)[0][0]
ssl_key  = ssl_info.scan(/(-----BEGIN RSA PRIVATE KEY-----.+?-----END RSA PRIVATE KEY-----)/m)[0][0]

server_options = {
  :BindAddress => "127.0.0.1",
  :Port => 3131,
  :AccessLog => [],
  :SSLEnable => true,
  :SSLVerifyClient => OpenSSL::SSL::VERIFY_NONE,
  :SSLPrivateKey => OpenSSL::PKey::RSA.new(ssl_key),
  :SSLCertificate => OpenSSL::X509::Certificate.new(ssl_cert),
  :SSLCertName => [["CN", WEBrick::Utils::getservername]],
}

if daemon_mode
  server_options[:ServerType] = WEBrick::Daemon
end

server = WEBrick::HTTPServer.new(server_options)
server.mount('/', dotjs)

%w( INT TERM ).each do |sig|
  trap(sig) { server.shutdown }
end

server.start

__END__
-----BEGIN CERTIFICATE-----
MIICHTCCAYYCCQCyTtHdO8ZrHDANBgkqhkiG9w0BAQUFADBTMQswCQYDVQQGEwJV
UzETMBEGA1UECAwKQ2FsaWZvcm5pYTELMAkGA1UEBwwCU0YxDjAMBgNVBAoMBWRv
dGpzMRIwEAYDVQQDDAlsb2NhbGhvc3QwHhcNMTMwMzA2MjEzMTQ0WhcNMjMwMzA0
MjEzMTQ0WjBTMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTELMAkG
A1UEBwwCU0YxDjAMBgNVBAoMBWRvdGpzMRIwEAYDVQQDDAlsb2NhbGhvc3QwgZ8w
DQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAM1jcjc6XA15GTHt5GTxw/VJNyP8vwJN
7+Mmr5ezLyBWi8IzhPJUgcZ5IWSUMe/+EsTBP3QtqgbJAEvR/Twh2qOQHvAg8YDq
ykLYYYEHYjt7klIYNcPBKTMXc54FNKUHRz2TTNKxCnwuqhunSnh+zbzyAuCGD4ia
jvoOkyM1pJJTAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAJU8mEw9qFrqaktkOm7vC
PTbuhpfLtXz/FiKGlDmJRVrDhb5R/ejBvUaYp5cJz/72jrNyQrqkEI8kKYQqqv5+
cbLrllSOdHQeTT0kG5aWTO2pZWCp6gUbRojT+tA0VZj1CVoTQZCXD8RXJoghSc5G
Bbjn/Orrx4bxgpD0kmrX2DE=
-----END CERTIFICATE-----
-----BEGIN RSA PRIVATE KEY-----
MIICWwIBAAKBgQDNY3I3OlwNeRkx7eRk8cP1STcj/L8CTe/jJq+Xsy8gVovCM4Ty
VIHGeSFklDHv/hLEwT90LaoGyQBL0f08IdqjkB7wIPGA6spC2GGBB2I7e5JSGDXD
wSkzF3OeBTSlB0c9k0zSsQp8Lqobp0p4fs288gLghg+Imo76DpMjNaSSUwIDAQAB
AoGAe2YHRlVC3zllwNDMCzYSZPmzLmT5IdpPiWtBzmPyqXw2BdzMQIgzXFqEjJhZ
FHbTMfFlPVj+MYtsKSGmAw3X/J/ZwM/VOzjuAa9ygeJWW7EJwzxJmb4lG8yQeSbQ
cBNCWPtgRRUflD7v1fCuOJ4DzEd5Bb3kTBfyEKShcVy8QVECQQDn35JjYtDkLF3U
VkaF4QyCWqgOmr3X+pNoSW3Yx2I+jp2HG3qHY5fV0B0PNpdencdpWn/kG5+pMb00
V8InmtV5AkEA4sJlFVxsaIXPB+45CZt2dLSkdyA4jaqv+rYi/jJZyDsXSd174ukM
u0j4jPwiN9S2xAc79tf/q7mEdNh7yB2vKwJAD7AOpW7AF0/xITadGt25DPC5QhOy
GHS5mGqvZeVHflgDzGpNhe91DGBCNw9IenxOS5B16qb7zGSzGmF9n1RYcQJAR0+e
/mK8bPp3qyTNpynOzNDqT9RANL0S7qNMyegHuCJtJnuStD9aE6PVFnFMSYaJm4gy
4WP4MYb8Esrp0nsTVQJAPvvZpLdYoDXPGtOHaMB19i3z7XEMohQpGiUvA+J5wjOa
smJzPv9APXqdZoo6NB+4EOk6dwpkXo5k65SunSpO8Q==
-----END RSA PRIVATE KEY-----
