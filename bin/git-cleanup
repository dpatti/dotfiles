#!/bin/bash

function prompt {
  echo -n -e "$1"
  read response

  echo $response | (! grep -iq "^${2:-n}" )
  return $?
}

echo "Finding merged branches in $(git symbolic-ref -q HEAD)"

for ref in $(git for-each-ref --format='%(refname)' refs/heads); do
  branch=$(echo $ref | cut -d/ -f3-)
  upstream=$(git rev-parse --symbolic-full-name --abbrev-ref --quiet --verify $branch@{u} 2>/dev/null)
  
  # Check if branch was merged
  if git merge-base --is-ancestor $ref HEAD; then
    # ...and is not something sitting on top of master
    if git merge-base --is-ancestor HEAD $ref; then
      continue
    fi

    merge_commit=$(git rev-list $branch..HEAD --ancestry-path | tail -1)
    merge_base=$(git merge-base $merge_commit^ $branch)

    git log --oneline --decorate --graph $merge_base..$branch

    # Prompt if the upstream still exists
    if [ -n "$upstream" ]; then
      prompt "Can we clean up $branch ($upstream) [Y/n]? " \
        || continue
    fi

    # Delete it locally
    git branch -d $branch || continue

    # If that succeeded, push too
    if [ -n "$upstream" ]; then
      git push $(echo $upstream | sed 's/\// :/')
    fi
  fi
done
